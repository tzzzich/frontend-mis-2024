@using MyWebApp.Models.ViewModels
@model CommentsListForViewModel
@{
    Layout = null;
    bool first = true;
}
@foreach(var comment in Model.Comments.OrderBy(c=>c.Comment.CreateTime.Ticks))
{
    if(comment.Comment.ParentId!=null){
        <div class="@(first?"outlined-comment":"")" style="margin-left:20px">
            @{
                first = false;
            }
            <h4 class="no-margin-vertical">@comment.Comment.Author <span style="font-size:small;color:lightgray">(@Model.SpecName)</span></h4>
            <div class="flex" style="padding-left:10px">
                <div class="flex-row space-between">
                    <span id="comment_span_@comment.Comment.Id" class="left fill comment-text">@comment.Comment.Content</span>
                    @if (comment.Comment.AuthorId == Model.UserId)
                    {
                        <input id="comment_input_@comment.Comment.Id" type="text" class="fill hidden" style="margin-right:10px" value="@comment.Comment.Content" onfocusout="closeEdit('@comment.Comment.Id')" />
                        <button id="comment_button_@comment.Comment.Id" class="button orange" onclick="editComment('@comment.Comment.Id', '@Model.ConsultId', this)">Редактировать комментарий</button>
                    }
                </div>
                <div style="display:flex;align-items:flex-start">
                    @{
                        bool isModified = (comment.Comment.ModifiedDate != null && comment.Comment.ModifiedDate.GetValueOrDefault() != comment.Comment.CreateTime);
                    }
                    <span class="text-grey tooltip">
                        @comment.Comment.CreateTime.ToString("dd.MM.yyyy hh:mm")
                        @if (isModified)
                        {
                            <span class="tooltiptext"> изменен: @comment.Comment.ModifiedDate.GetValueOrDefault().ToString("dd.MM.yyyy hh:mm")</span>
                        }
                    </span>
                    @if (comment.ChildComments.Count > 0)
                    {
                        <span class="blue-only-color" style="font-size:small;margin-left:10px;cursor:pointer" onclick="expandComents('@comment.Comment.Id', '@comment.ChildComments.Count', '@Model.SpecName', this)"> Показать ответы(@(comment.ChildComments.Count))</span>
                    }
                    <a class="blue-only-color" style="text-decoration:none; font-size:small;margin-left:10px;cursor:pointer" onclick="addComment('@comment.Comment.Id')"> Ответить</a>
                </div>
                <div id="commentReplyHolder_@comment.Comment.Id" class="flex-row space-between hidden">
                    <input id="newCommentText_@comment.Comment.Id" type="text" placeholder="Оставить комментарий" style="width:100%;margin-right:10px" />
                    <button class="button" onclick="addCommentSave('@comment.Comment.Id', '@Model.ConsultId')">Оставить комментарий</button>
                </div>
                <div id="errorComment_@comment.Comment.Id" class="text-danger hidden"></div>
            </div>
        </div>
        <div style="max-width:400px;border-block-end:1px solid lightgrey"></div>
        <div id="commentsHolder_@comment.Comment.Id" class="hidden" style="margin-left:20px">
            @{
                Html.RenderPartial("CommentsListView", new CommentsListForViewModel{ Comments = comment.ChildComments, ConsultId = Model.ConsultId, UserId = Model.UserId});
            }
        </div>
    }
}